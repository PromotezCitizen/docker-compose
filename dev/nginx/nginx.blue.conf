user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  keepalive_timeout 65;

  log_format custom_log '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$upstream_addr"';
  access_log /var/log/nginx/access.log custom_log;

  error_log /var/log/nginx/error.log;

  upstream dev_backend {
    # least_conn; # default: round-robine
    server dev-blue:3000;
  }

  server {
    listen 80;

    location /.well-known/acme-challenge/ {
      allow all;
      root /var/www/certbot;
    }

    location / {
      # proxy_pass http://dev_backend; # 서버 1로 요청 프록시
      # proxy_set_header Host $host; # 클라이언트의 호스트 설정
      # proxy_set_header Connection ""; # upstream서버를 사용하겠다 지정(⭐중요)
      return 301 https://$host$request_uri;
    }
  }
  
  server {
    listen 443 ssl;
    server_name rgback.duckdns.org;

    ssl_certificate /etc/letsencrypt/live/rgback.duckdns.org-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rgback.duckdns.org-0001/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
      # https://velog.io/@ghdlf0619/Net-SSL-error1408F10BSSL-routinesssl3getrecordwrong-version-number-nginx-TrobleShooting
      # HTTPS라도 프록시는 http로 넘겨야 한다
      proxy_pass http://dev_backend; # 서버 1로 요청 프록시
      proxy_set_header Host $host; # 클라이언트의 호스트 설정
      proxy_set_header Connection ""; # upstream서버를 사용하겠다 지정(⭐중요)
    }
  }
}